{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/app.component\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction CatagorymgmtComponent_tr_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6, \" Delete \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const cat_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i_r2 + 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cat_r1.name);\n  }\n}\nexport class CatagorymgmtComponent {\n  constructor(http, app) {\n    this.http = http;\n    this.app = app;\n    this.name = '';\n    //api call to get all existing categories\n    let url = app.baseUrl + 'admin/getAllCategories';\n    http.get(url).subscribe(data => {\n      if (data == null) {\n        window.alert('Something is Wrong');\n      } else {\n        this.list = data;\n      }\n    });\n  }\n  addCategory() {\n    let url = this.app.baseUrl + 'admin/addNewCategory' + this.app.id;\n    this.http.post(url, this.name).subscribe(data => {\n      if (data == null) {\n        window.alert('something is wrong');\n      } else {\n        this.list.push(data);\n        this.name = '';\n      }\n    });\n  }\n  static #_ = this.ɵfac = function CatagorymgmtComponent_Factory(t) {\n    return new (t || CatagorymgmtComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.AppComponent));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CatagorymgmtComponent,\n    selectors: [[\"app-catagorymgmt\"]],\n    decls: 15,\n    vars: 2,\n    consts: [[\"border\", \"1\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"text\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"]],\n    template: function CatagorymgmtComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"table\", 0)(1, \"tr\")(2, \"th\");\n        i0.ɵɵtext(3, \"SN\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"th\");\n        i0.ɵɵtext(5, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"th\");\n        i0.ɵɵtext(7, \"Action\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(8, CatagorymgmtComponent_tr_8_Template, 7, 2, \"tr\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(9, \"\\nAddNewCategory:\");\n        i0.ɵɵelement(10, \"br\");\n        i0.ɵɵtext(11, \"\\nCategory:\");\n        i0.ɵɵelementStart(12, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function CatagorymgmtComponent_Template_input_ngModelChange_12_listener($event) {\n          return ctx.name = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function CatagorymgmtComponent_Template_button_click_13_listener() {\n          return ctx.addCategory();\n        });\n        i0.ɵɵtext(14, \"Add\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngForOf\", ctx.list);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.name);\n      }\n    },\n    dependencies: [i3.NgForOf, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","i_r2","cat_r1","name","CatagorymgmtComponent","constructor","http","app","url","baseUrl","get","subscribe","data","window","alert","list","addCategory","id","post","push","_","ɵɵdirectiveInject","i1","HttpClient","i2","AppComponent","_2","selectors","decls","vars","consts","template","CatagorymgmtComponent_Template","rf","ctx","ɵɵtemplate","CatagorymgmtComponent_tr_8_Template","ɵɵelement","ɵɵlistener","CatagorymgmtComponent_Template_input_ngModelChange_12_listener","$event","CatagorymgmtComponent_Template_button_click_13_listener","ɵɵproperty"],"sources":["C:\\Users\\chinc\\AngularProject\\AmazonClone\\src\\app\\admin\\catagorymgmt\\catagorymgmt.component.ts","C:\\Users\\chinc\\AngularProject\\AmazonClone\\src\\app\\admin\\catagorymgmt\\catagorymgmt.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { AppComponent } from 'src/app/app.component';\n\n@Component({\n  selector: 'app-catagorymgmt',\n  templateUrl: './catagorymgmt.component.html',\n  styleUrls: ['./catagorymgmt.component.css']\n})\nexport class CatagorymgmtComponent {\n\n  list: any;\n\n  constructor(public http: HttpClient, public app: AppComponent) {\n    //api call to get all existing categories\n    let url = app.baseUrl + 'admin/getAllCategories'\n    http.get(url).subscribe((data: any) => {\n      if (data == null) {\n        window.alert('Something is Wrong')\n      }\n      else {\n        this.list = data;\n      }\n    })\n\n  }\n  name: string = '';\n  addCategory() {\n    let url = this.app.baseUrl + 'admin/addNewCategory' + this.app.id;\n    this.http.post(url, this.name).subscribe((data: any) => {\n      if (data == null) {\n        window.alert('something is wrong');\n      }\n      else {\n        this.list.push(data);\n        this.name = '';\n      }\n    })\n  }\n}","<!-- display -->\n<table border=\"1\">\n    <tr>\n    <th>SN</th>\n    <th>Name</th>\n    <th>Action</th>\n    </tr>\n    <tr *ngFor=\"let cat of list; let i=index\">\n        <td>{{i+1}}</td>\n        <td>{{cat.name}}</td>\n        <td>\n            Delete\n        </td>\n   </tr>\n</table>\n<!-- addnew -->\nAddNewCategory:<br>\nCategory:<input type=\"text\" [(ngModel)]=\"name\">\n<button (click)=\"addCategory()\">Add</button>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}